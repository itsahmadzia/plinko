import express from "express"; 
import cors from 'cors';
const app = express(); 
app.use(cors());
app.use(express.json());
function getRandomMultiplier() {
    const multipliers = Object.keys(data);
    const probabilities = {
        "0.25": 0.2, 
        "0.5": 0.3,
        "1": 0.4,
        "2": 0.04,
        "4": 0.03,
        "8": 0.02,
        "16": 0.01
    };

    const random = Math.random();
   let selectedMultiplier;
    let cumulativeProbability = 0;
    for (const multiplier of multipliers) {
        cumulativeProbability += probabilities[multiplier];
        if (random <= cumulativeProbability) {
            selectedMultiplier = multiplier;
            break;
        }
    }

    // If selected multiplier is not found, default to 1
    if (!selectedMultiplier) {
        selectedMultiplier = "1";
    }

     const values = data[selectedMultiplier];
    const randomIndex = Math.floor(Math.random() * values.length);
    return {"cordinate":values[randomIndex],"Multiplier":selectedMultiplier};
}
const data = 
{"16":[39180755]
  ,
    "1": [
      40786225,
      40789650,
      41950618,
      39534230,
      41056521,
      37951433,
      37836414,
      40311454,
      37638308,
      37640510,
      42825502,
      37659912,
      41852393,
      40767068,
      41708506,
      39159824,
      40005780,
      42261698,
      37383279,
      38533755,
      38802911,
      41764901,
      37367139,
      43014356,
      39581934,
      42621489,
      41672681,
      37205338,
      42516522,
      42261440,
      38318203,
      41065329,
      39655824,
      41469370,
      40060844,
      41224511,
      41019767,
      38667414,
      41615321,
      40688151,
      39506426,
      38697384,
      37047204,
      37741451,
      38934928,
      37621261,
      37054937,
      40887300,
      39452910,
      42486569,
      41605893,
      42738779,
      37437946,
      42414075,
      40223800,
      38263161,
      39392224,
      39088467,
      38336688,
      39451575,
      39150115,
      37937257,
      41447146,
      38050345
    ],
    "2": [
      40062350,
      42701041,
      38521055,
      41300471,
      38950710,
      40707139,
      41094136,
      39451279,
      39075654,
      40021207,
      40966219,
      39388537,
      40927784,
      37332892,
      42089013,
      42816889,
      39998443,
      38358533,
      41590760,
      42612572,
      41115112,
      37697774,
      39656446,
      37771637,
      39516946
    ],
    "4": [
      38242317,
      40401455,
      42193517,
      40303211,
      39272504,
      40422332,
      37605193,
      40959522,
      42314054,
      43078038,
      37183624,
      39068735,
      38372899,
      40961730,
      38170116,
      38202618,
      42120390,
      39743495,
      40929713,
      40957740,
      39096772,
      39060168,
      38865499
    ],
    "8": [
      42048899,
      40377552,
      42945905,
      41789165,
      43085604
    ],
    "0.25": [
      42300000,
      41808721,
      41321071,
      41762792,
      42836370,
      38773930,
      37108647,
      41619466,
      41063143,
      39411103,
      41112269,
      37349100,
      41173851,
      40205983,
      38637914,
      42041892,
      40026037,
      38792354,
      41577346,
      37130706,
      41316643,
      43016944,
      37701529,
      38896930,
      38544972,
      42368459,
      37175761,
      39655829,
      39979446,
      40116339,
      40372710,
      37328278,
      38399531,
      40491698,
      42417440,
      40518707,
      37523236,
      37433850,
      37009658,
      41485937,
      38042443,
      41387872,
      40520087,
      40584219,
      37391144,
      38133115,
      39181311,
      37629298,
      42439197,
      42355255,
      41696465,
      41150652,
      41451281,
      38405615,
      41877219,
      40523675,
      42392589,
      39318296,
      39478127,
      38104323,
      41209691,
      42298935,
      38507787,
      39779239,
      40538072,
      42940273,
      41835843,
      38321948
    ],
    "0.5": [
      42828431,
      37137950,
      37536059,
      39917362,
      40881834,
      37998807,
      40542888,
      39516917,
      38651889,
      39463887,
      40685553,
      39583247,
      41326098,
      42570663,
      40518456,
      40922773,
      39692061,
      42092223,
      40553614,
      37657800,
      41155169,
      38855703,
      37460805,
      39879047,
      37322793,
      38944734,
      37876753,
      42708493,
      42599136,
      38576184,
      39323397,
      42618721,
      42304780,
      38114479,
      41551184,
      40104607,
      37261590,
      37636326,
      41348338,
      41394966,
      37075440,
      37213590,
      41260625,
      42018225,
      41726250,
      37102900,
      39384167,
      37208804,
      42429404,
      42453373,
      39326264,
      40075031,
      42228918,
      38927596,
      40303767,
      39588528,
      39413372,
      41451007,
      42285714,
      37032300,
      40917576,
      41633851,
      42978764,
      40104122,
      41756460,
      38966379,
      37640419,
      37524703,
      38178389,
      41523375,
      40385836,
      42962826,
      40044969,
      41276981,
      41013992,
      42264529,
      42929995,
      40775630,
      37626919,
      38201155,
      38820762,
      38929138,
      41150721,
      38538925,
      41558068,
      38808926,
      41388039,
      38215881,
      40807459,
      39732815,
      42340723,
      38917886,
      38704283,
      43048041,
      39930964,
      42077403,
      41899148,
      41488777
    ]
  };

  app.listen(3000, () => {
    console.log("Server is running");
});

app.post("/api/betAmount",(req,res)=>{
   let {betAmount,dangerLevel}=req.body; 
    if(!betAmount){
        betAmount= 0; 
    }

    const r = getRandomMultiplier();
let result = 0; 
if(parseFloat(r.Multiplier) >1 ) {
  result =  betAmount* (r.Multiplier * dangerLevel);
}
else  {
  result =  betAmount*(r.Multiplier / dangerLevel);
}

    res.send({"Result":r,"betAmount" : result.toFixed(2)});

})

app.get("/", (req, res) => {
    const r=getRandomMultiplier();
    res.send({data,"PPPPPPPPP":r});
});
app.use((err, req, res, next) => {
    console.error(err.stack);
    res.status(500).send('Something broke!');
});

console.log("youuu");